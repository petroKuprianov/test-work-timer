{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","seconds","min","hours","countClick","timer","disabled","countDouble","lastClick","type","thiis","this","setState","Observable","obserever","complete","setInterval","next","subscribe","clearInterval","Date","getTime","secClick","Math","abs","startTimer","call","className","onClick","bind","countDoubleClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ff75a7a.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport {Observable} from \"rxjs\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            seconds : 0,\n            min : 0,\n            hours : 0,\n            countClick : 0,\n            timer : null,\n            disabled: true,\n            countDouble: 0,\n            lastClick: null,\n        }\n    }\n    startTimer(type) {\n        const thiis = this;\n        this.setState({countClick: this.state.countClick += 1})\n\n        if(type === 'wait' || (this.state.seconds === 0 && this.state.min === 0 && this.state.hours === 0))\n        {\n            this.setState({disabled: true})\n        }\n        const stream$ = new Observable( obserever =>{\n            if(type === 'reset'){\n                obserever.complete();\n                if(!this.state.disabled){\n                    this.setState({countClick: this.state.countClick -= 1})\n                }\n            }\n            if(this.state.countClick % 2 !== 0) {\n                this.setState({disabled: false})\n                this.setState({timer:\n                        setInterval(() => {\n                            obserever.next(thiis.setState({seconds: thiis.state.seconds += 1}))\n                            if(this.state.seconds === 60) {\n                                thiis.setState({min: thiis.state.min += 1})\n                                thiis.setState({seconds: 0})\n                            }\n                            if(this.state.min === 60) {\n                                thiis.setState({hours: thiis.state.hours += 1})\n                                thiis.setState({min: 0})\n                            }\n\n                        }, 1000)\n                })\n            }\n            else {\n                obserever.complete()\n                this.setState({disabled: true})\n            }\n        })\n        stream$.subscribe( {\n            complete(){\n                if(type === 'wait'){\n                    clearInterval(thiis.state.timer);\n                } else {\n                    clearInterval(thiis.state.timer);\n                    thiis.setState({seconds: 0, min: 0, hours: 0})\n                }\n            }\n        })\n    }\n\n    countDoubleClick(){\n        this.setState({countDouble: this.state.countDouble += 1})\n        if(this.state.lastClick === null) {\n            this.setState({lastClick: new Date().getTime()});\n        }\n        if(this.state.lastClick !== null) {\n            let secClick = new Date().getTime();\n            let curr = Math.abs(secClick - this.state.lastClick);\n            if(curr <= 300) {\n                this.startTimer.call(this, 'wait');\n                this.setState({lastClick: null})\n            }\n            this.setState({lastClick: secClick})\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"timer\">\n                <div className=\"wrapper\">\n                    <h2>Timer</h2>\n                    <div className=\"time\">\n                        <span>\n                            { this.state.hours < 10 ? '0' : '' }{this.state.hours}:\n                        </span>\n                        <span>\n                            { this.state.min < 10 ? '0' : '' }{this.state.min}:\n\n                        </span>\n                        <span>\n                            { this.state.seconds < 10 ? '0' : '' }{this.state.seconds}\n\n                        </span>\n                    </div>\n                    <div className=\"buttons\">\n                        <button onClick={this.startTimer.bind(this, 'start')}>Start / stop</button>\n                        <button onClick={this.countDoubleClick.bind(this)} disabled={this.state.disabled} >Wait</button>\n                        <button onClick={this.startTimer.bind(this, 'reset')} disabled={this.state.seconds === 0 && this.state.min === 0 && this.state.hours === 0}>Reset</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}